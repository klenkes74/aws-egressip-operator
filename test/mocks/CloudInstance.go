// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import (
	net "net"

	mock "github.com/stretchr/testify/mock"
)

// CloudInstance is an autogenerated mock type for the CloudInstance type
type CloudInstance struct {
	mock.Mock
}

// FailureRegion provides a mock function with given fields:
func (_m *CloudInstance) FailureRegion() string {
	ret := _m.Called()

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// FailureZone provides a mock function with given fields:
func (_m *CloudInstance) FailureZone() string {
	ret := _m.Called()

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// HostName provides a mock function with given fields:
func (_m *CloudInstance) HostName() string {
	ret := _m.Called()

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// ID provides a mock function with given fields:
func (_m *CloudInstance) ID() string {
	ret := _m.Called()

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// NetworkInterface provides a mock function with given fields:
func (_m *CloudInstance) NetworkInterface() string {
	ret := _m.Called()

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// PrimaryIP provides a mock function with given fields:
func (_m *CloudInstance) PrimaryIP() *net.IP {
	ret := _m.Called()

	var r0 *net.IP
	if rf, ok := ret.Get(0).(func() *net.IP); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*net.IP)
		}
	}

	return r0
}

// SecondaryIps provides a mock function with given fields:
func (_m *CloudInstance) SecondaryIps() []*net.IP {
	ret := _m.Called()

	var r0 []*net.IP
	if rf, ok := ret.Get(0).(func() []*net.IP); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]*net.IP)
		}
	}

	return r0
}

// Tags provides a mock function with given fields:
func (_m *CloudInstance) Tags() *map[string]string {
	ret := _m.Called()

	var r0 *map[string]string
	if rf, ok := ret.Get(0).(func() *map[string]string); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*map[string]string)
		}
	}

	return r0
}

// URI provides a mock function with given fields:
func (_m *CloudInstance) URI() string {
	ret := _m.Called()

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}
